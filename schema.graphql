type FinishPool @entity(immutable: true) {
  id: Bytes!
  internal_id: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type NewInvestorEvent @entity(immutable: true) {
  id: Bytes!
  Investor_ID: BigInt! # uint256
  Investor_Address: Bytes! # address
  LockedDeal_ID: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type NewPool @entity(immutable: true) {
  id: Bytes!
  token: Bytes! # address
  internal_id: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Paused @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PoolUpdate @entity(immutable: true) {
  id: Bytes!
  internal_id: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TransferIn @entity(immutable: true) {
  id: Bytes!
  Amount: BigInt! # uint256
  From: Bytes! # address
  Token: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TransferInETH @entity(immutable: true) {
  id: Bytes!
  Amount: BigInt! # uint256
  From: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TransferOut @entity(immutable: true) {
  id: Bytes!
  Amount: BigInt! # uint256
  To: Bytes! # address
  Token: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TransferOutETH @entity(immutable: true) {
  id: Bytes!
  Amount: BigInt! # uint256
  To: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Unpaused @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Invested @entity(immutable: true) {
  id: Bytes!            # tx hash (same for every child event)
  internal_id: BigInt!   # pool’s ID – filled by PoolUpdate / FinishPool
  investor: Bytes!      # first address that deposited – filled by TransferIn/ETH
  timestamp: BigInt!
  IsErc20: Boolean!    # if this pool main coin is 0x0 or there is some Erc20 as input
  amountIn: BigInt!    # this can be from transferin or transferinETH
  amountOut: BigInt!   # this is TransferOut - make usre the TransferOut is not the fee when its IsErc20
}